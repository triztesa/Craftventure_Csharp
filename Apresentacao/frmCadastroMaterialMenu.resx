<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="kryptonButton1.StateCommon.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RERERERERERERERERERERERERERERERERERERERERERERETkXXPjxj9oKPypJxP9VAAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>